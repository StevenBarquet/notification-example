# This is an example Starter pipeline configuration
# Use a skeleton to build, test and deploy using manual and parallel steps
# -----
# You can specify a custom docker image from Docker Hub as your build environment.

image: atlassian/default-image:3

pipelines:
  default:

    # The following deployment steps will be executed for each pipeline run. To configure your steps and conditionally deploy see https://support.atlassian.com/bitbucket-cloud/docs/configure-bitbucket-pipelinesyml/
    - step:
        name: 'Update repo'
        deployment: staging
        script:
        - pipe: atlassian/ssh-run:0.4.1
          variables:
            SSH_USER: 'ec2-user'
            SERVER: $PROD_EC2_IP
            DEBUG: 'true'
            COMMAND: |
                cd back-forge-platform/
                git pull
    
    - step:
        name: 'Clean Prev Docker'
        script:
        - pipe: atlassian/ssh-run:0.4.1
          variables:
            SSH_USER: 'ec2-user'
            SERVER: $PROD_EC2_IP
            DEBUG: 'true'
            COMMAND: |
                docker container rm graphql-stackoverflow-container -f
                docker container rm graphql_stackoverflow_image -f

    - step:
        name: 'Clean Docker Cache'
        script:
        - pipe: atlassian/ssh-run:0.4.1
          variables:
            SSH_USER: 'ec2-user'
            SERVER: $PROD_EC2_IP
            DEBUG: 'true'
            COMMAND: |
                cd back-forge-platform/
                expect ./config/expect/cleanCache.expect

    - step:
        name: 'Build and Deploy'
        script:
        - pipe: atlassian/ssh-run:0.4.1
          variables:
            SSH_USER: 'ec2-user'
            SERVER: $PROD_EC2_IP
            DEBUG: 'true'
            COMMAND: |
                docker build -t node_app_image .
                docker run --name node-app-container -p 4000:4000 -d --restart unless-stopped node_app_image
